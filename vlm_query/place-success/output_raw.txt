```python
# The task involves placing the pasta bag into the drawer. 
# Since the end-effector is already at the drawer's keypoint, and the drawer is aligned with the pasta bag at the proper height, 
# the task can be broken into two stages:
# 1. Grasp the pasta bag.
# 2. Place the pasta bag into the drawer.

num_stages = 2

### stage 1: grasp the pasta bag
def stage1_subgoal_constraint1(end_effector, keypoints):
    """Align the end-effector with the pasta bag keypoint (keypoint 17)."""
    pasta_bag_keypoint = keypoints[17]
    cost = np.linalg.norm(end_effector - pasta_bag_keypoint)
    return cost

# No path constraints are needed for this stage.

### stage 2: place the pasta bag into the drawer
def stage2_subgoal_constraint1(end_effector, keypoints):
    """Ensure the pasta bag (keypoint 17) is inside the drawer (keypoint 13)."""
    drawer_keypoint = keypoints[13]
    pasta_bag_keypoint = keypoints[17]
    offsetted_point = drawer_keypoint + np.array([0, 0, 0])  # No offset needed, align directly.
    cost = np.linalg.norm(pasta_bag_keypoint - offsetted_point)
    return cost

def stage2_path_constraint1(end_effector, keypoints):
    """The robot must still be grasping the pasta bag (keypoint 17)."""
    pasta_bag_keypoint = keypoints[17]
    cost = np.linalg.norm(end_effector - pasta_bag_keypoint)
    return cost

# Summarize keypoints to be grasped in all grasping stages.
grasp_keypoints = [17, -1]

# Summarize at the end of which stage the robot should release the keypoints.
release_keypoints = [-1, 17]
```