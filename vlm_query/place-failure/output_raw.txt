```python
# The task involves placing the pasta bag into the drawer. 
# The robot's end-effector is already at the drawer's keypoint, and the drawer is aligned with the pasta bag at the proper height.
# This task can be broken down into two stages:
# 1. Grasp the pasta bag.
# 2. Place the pasta bag into the drawer.

num_stages = 2

### stage 1 sub-goal constraints (grasp the pasta bag)
def stage1_subgoal_constraint1(end_effector, keypoints):
    """
    Align the end-effector with the pasta bag's keypoint (keypoint 33).
    The cost is the Euclidean distance between the end-effector and keypoint 33.
    """
    pasta_bag_keypoint = keypoints[33]
    cost = np.linalg.norm(end_effector - pasta_bag_keypoint)
    return cost

### stage 1 path constraints
# No path constraints are needed for the grasping stage.

### stage 2 sub-goal constraints (place the pasta bag into the drawer)
def stage2_subgoal_constraint1(end_effector, keypoints):
    """
    The pasta bag (keypoint 33) must be inside the drawer.
    The cost is the Euclidean distance between keypoint 33 and the center of the drawer (keypoint 30).
    """
    drawer_center_keypoint = keypoints[30]
    pasta_bag_keypoint = keypoints[33]
    cost = np.linalg.norm(pasta_bag_keypoint - drawer_center_keypoint)
    return cost

### stage 2 path constraints
def stage2_path_constraint1(end_effector, keypoints):
    """
    The robot must still be grasping the pasta bag (keypoint 33).
    The cost is the Euclidean distance between the end-effector and keypoint 33.
    """
    pasta_bag_keypoint = keypoints[33]
    cost = np.linalg.norm(end_effector - pasta_bag_keypoint)
    return cost

"""
Summarize keypoints to be grasped in all grasping stages.
The length of the list should be equal to the number of stages.
For grasping stage, write the keypoint index. For non-grasping stage, write -1.
"""
grasp_keypoints = [33, -1]

"""
Summarize at **the end of which stage** the robot should release the keypoints.
The keypoint indices must appear in an earlier stage as defined in `grasp_keypoints` (i.e., a keypoint can only be released only if it has been grasped previously).
Only release object when it's necessary to complete the task, e.g., drop bouquet in the vase.
The length of the list should be equal to the number of stages.
If a keypoint is to be released at the end of a stage, write the keypoint index at the corresponding location. Otherwise, write -1.
"""
release_keypoints = [-1, 33]
```